language: php

php:
  - 7.0.12

env:
  - DB=mysql

cache:
  - bundler
  - apt
  - composer
cache:
  directories:
  - $HOME/.composer/cache
  - $HOME/apcu-4.0.2
  - $HOME/redis-2.2.7

services:
  - redis-server
git:
  submodules: false
before_script:
  - printenv
  - mkdir build
  - chmod -R 777 ./build
  - echo -ne '\n' | pecl install apcu
  - echo "apc.enable_cli=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - pecl install msgpack channel://pecl.php.net/msgpack-2.0.2
  - echo "extension=redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - phpenv config-rm xdebug.ini
  - phpenv rehash
  - composer install --prefer-dist --no-interaction --no-dev
  - Vendor/bin/browscap-php browscap:update
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE cakephp_test;'; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE cakephp;'; fi"
  - mkdir ./app/tmp
  - chmod -R 777 ./app/tmp
  - echo "<?php
    class DATABASE_CONFIG {
    private \$identities = array(
      'mysql' => array(
        'datasource' => 'Database/Mysql',
        'host' => '0.0.0.0',
        'login' => 'travis'
      ),
    );
    public \$default = array(
      'persistent' => false,
      'host' => '',
      'login' => '',
      'password' => '',
      'database' => 'cakephp',
      'prefix' => ''
    );
    public \$test = array(
        'datasource' => 'Database/Sqlite',
        'persistent' => false,
        'database'   => ':memory:',
        'prefix'     => '',
    );
    public \$redis = array(
        'datasource'  => 'Redis.RedisSource',
        'host'        => 'localhost',
        'port'        => 6379,
        'password'    => '',
        'database'    => 0,
        'timeout'     => 0,
        'persistent'  => false,
        'unix_socket' => '',
        'prefix'      => '',
    );
    public \$redis_test = array(
        'datasource'  => 'Redis.RedisSource',
        'host'        => 'localhost',
        'port'        => 6379,
        'password'    => '',
        'database'    => 0,
        'timeout'     => 0,
        'persistent'  => false,
        'unix_socket' => '',
        'prefix'      => 'test:',
    );

    public function __construct() {
        \$db = \$_SERVER['DB'];
        \$config = array_merge(\$this->default, \$this->identities[\$db]);
        if (is_array(\$config['database'])) {
          \$config['database'] = \$config['database']['default'];
        }
        \$this->default = \$config;
    }
    }" > app/Config/database.php
  - mkdir -p build/logs
  - cd ./app
  - echo -ne '\n\n' | ./Console/cake schema create

script:
  # if PR, reporting covarage
#TODO 一旦カバレッジ測定やめる。並列処理にする
#  - if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then ./Console/cake test app AllTests --stderr --configuration ../phpunit.xml.dist; fi
#  - if [[ $TRAVIS_PULL_REQUEST != "false" ]]; then ./Console/cake test app AllTests --stderr --coverage-clover ../build/logs/clover.xml --configuration ../phpunit.xml.dist; fi
  - ./Console/cake test app AllTests --stderr --configuration ../phpunit.xml.dist

after_script:
#TODO 一旦カバレッジ測定やめる。並列処理にする
#  - if [[ $TRAVIS_PULL_REQUEST != "false" ]]; then php Vendor/bin/coveralls -v; fi
before_deploy:
#TODO 一旦カバレッジ測定やめる。並列処理にする
#  - if [[ $TRAVIS_PULL_REQUEST != "false" ]]; then php Vendor/bin/coveralls -v; fi

notifications:
  slack: goalous:JkI6FxdrZDzE1gILR6qTJ69p
  email: false

deploy:
## 本番、ISAO環境においては自動deployをやめる。
#  - provider: opsworks
#    access-key-id: $AWS_ACCESS_KEY
#    secret-access-key: $AWS_SECRET_KEY
#    app-id: 77c4fc53-40c3-4a73-b532-18d5ef1beff7
#    wait-until-deployed: true
#    on:
#      branch: master
#  - provider: opsworks
#    access-key-id: $AWS_ACCESS_KEY
#    secret-access-key: $AWS_SECRET_KEY
#    app-id: 786fd3c0-1b5f-49d9-b707-27dba2909c84
#    wait-until-deployed: true
#    on:
#      branch: master-isao
  - provider: opsworks
    access-key-id: $AWS_ACCESS_KEY
    secret-access-key: $AWS_SECRET_KEY
    app-id: 8652d11c-db59-4482-afe9-44f1a7a0df0c
    wait-until-deployed: false
    on:
      branch: stage

  - provider: opsworks
    access-key-id: $AWS_ACCESS_KEY
    secret-access-key: $AWS_SECRET_KEY
    app-id: 35e69705-18d9-4c45-81eb-7e02e0c61fdc
    wait-until-deployed: false
    on:
      branch: dev-ind
