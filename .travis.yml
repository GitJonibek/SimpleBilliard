language: php

php:
  - 5.5

env:
  - DB=mysql

cache:
  - bundler
  - apt
  - composer
cache:
  directories:
  - $HOME/.composer
  - $HOME/apcu-4.0.2
  - $HOME/redis-2.2.7
services:
  - redis-server

git:
  submodules: false
before_script:
  - sudo apt-get update
  - sudo apt-get install apache2 libapache2-mod-fastcgi autoconf
  - sudo cp ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf.default ~/.phpenv/versions/$(phpenv version-name)/etc/php-fpm.conf
  - sudo a2enmod rewrite actions fastcgi alias
  - echo "cgi.fix_pathinfo = 1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - echo "short_open_tag = On" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - ~/.phpenv/versions/$(phpenv version-name)/sbin/php-fpm
  - mkdir build
  - chmod -R 777 ./build
  - cp app/Test/travis/travis-ci-apache build/travis-ci-apache
  - sudo cp -f build/travis-ci-apache /etc/apache2/sites-available/default
  - sudo sed -e "s?%TRAVIS_BUILD_DIR%?$(pwd)?g" --in-place /etc/apache2/sites-available/default
  - sudo apt-get install php5-xdebug php5-curl php5-mcrypt
  - sudo apt-get install php-pear php5-dev
  - pecl install oauth
  - if [ ! -e apcu-4.0.2]; then wget http://pecl.php.net/get/apcu-4.0.2.tgz ; tar -xzf apcu-4.0.2.tgz ; fi
  - sh -c "cd apcu-4.0.2 && phpize && ./configure && make && sudo make install"
  - echo "extension=apcu.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - echo "apc.enabled=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - echo "apc.enable_cli=1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - if [ ! -e redis-2.2.7]; then wget http://pecl.php.net/get/redis-2.2.7.tgz ; tar -xzf redis-2.2.7.tgz ; fi
  - sh -c "cd redis-2.2.7 && phpize && ./configure && make && sudo make install"
  - echo "extension=redis.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  # Download browscap.ini
  - wget -O /home/travis/browscap.ini http://browscap.org/stream?q=LITE_PHP_BrowsCapINI
  - echo 'browscap = "/home/travis/browscap.ini"' >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - sudo service apache2 restart
  - composer update --no-interaction --no-dev
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE cakephp_test;'; fi"
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE cakephp;'; fi"
  - mkdir ./app/tmp
  - chmod -R 777 ./app/tmp
  - echo "<?php
    class DATABASE_CONFIG {
    private \$identities = array(
      'mysql' => array(
        'datasource' => 'Database/Mysql',
        'host' => '0.0.0.0',
        'login' => 'travis'
      ),
    );
    public \$default = array(
      'persistent' => false,
      'host' => '',
      'login' => '',
      'password' => '',
      'database' => 'cakephp',
      'prefix' => ''
    );
    public \$test = array(
      'persistent' => false,
      'host' => '',
      'login' => '',
      'password' => '',
      'database' => 'cakephp_test',
      'prefix' => ''
    );
    public \$redis = array(
        'datasource'  => 'Redis.RedisSource',
        'host'        => 'localhost',
        'port'        => 6379,
        'password'    => '',
        'database'    => 0,
        'timeout'     => 0,
        'persistent'  => false,
        'unix_socket' => '',
        'prefix'      => '',
    );
    public \$redis_test = array(
        'datasource'  => 'Redis.RedisSource',
        'host'        => 'localhost',
        'port'        => 6379,
        'password'    => '',
        'database'    => 0,
        'timeout'     => 0,
        'persistent'  => false,
        'unix_socket' => '',
        'prefix'      => 'test',
    );

    public function __construct() {
      \$db = 'mysql';
      if (!empty(\$_SERVER['DB'])) {
        \$db = \$_SERVER['DB'];
      }
      foreach (array('default', 'test') as \$source) {
        \$config = array_merge(\$this->{\$source}, \$this->identities[\$db]);
        if (is_array(\$config['database'])) {
          \$config['database'] = \$config['database'][\$source];
        }
        if (!empty(\$config['schema']) && is_array(\$config['schema'])) {
          \$config['schema'] = \$config['schema'][\$source];
        }
        \$this->{\$source} = \$config;
      }
    }
    }" > app/Config/database.php
#  - mysql cakephp_test < app/Config/sql/mysql.sql

script:
  - mkdir -p build/logs
  - cd ./app
  - echo -ne '\n\n' | ./Console/cake schema create
  - ./Console/cake test app AllTests --stderr --coverage-clover ../build/logs/clover.xml --configuration ../phpunit.xml.dist
  - cd ../

after_script:
  - php Vendor/bin/coveralls -v

before_deploy:
  - php Vendor/bin/coveralls -v

notifications:
  slack: goalous:JkI6FxdrZDzE1gILR6qTJ69p
  email: false

deploy:
  - provider: opsworks
    access-key-id: AKIAJHXVNZZEOX3TD5BA
    secret-access-key: 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
    app-id: feaeb538-35a5-4a1c-bab7-01a70c666987
    wait-until-deployed: true
    on:
      branch: hotfix
  - provider: opsworks
    access-key-id: AKIAJHXVNZZEOX3TD5BA
    secret-access-key: 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
    app-id: 77c4fc53-40c3-4a73-b532-18d5ef1beff7
    wait-until-deployed: true
    on:
      branch: master
